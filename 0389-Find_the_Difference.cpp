/*******************************************************************************
 * 0389-Find_the_Difference.cpp
 * Billy.Ljm
 * 25 September 2023
 *
 * =======
 * Problem
 * =======
 * https://leetcode.com/problems/find-the-difference/
 *
 * You are given two strings s and t.
 *
 * String t is generated by random shuffling string s and then add one more
 * letter at a random position.
 *
 * Return the letter that was added to t.
 *
 * ===========
 * My Approach
 * ===========
 * We can sum the letters in each string, as ASCII, and subtract both to find
 * their difference.
 *
 * This has a time complexity of O(n), and a space complexity of O(1), where n
 * is the length of the longer string.
 ******************************************************************************/

#include <iostream>
#include <vector>
#include <numeric>

using namespace std;

/**
 * << operator for vectors
 */
template <typename T>
std::ostream& operator<<(std::ostream& os, const std::vector<T>& v) {
	os << "[";
	for (const auto elem : v) {
		os << elem << ",";
	}
	if (v.size() > 0) os << "\b";
	os << "]";
	return os;
}

/**
 * Solution
 */
class Solution {
public:
	char findTheDifference(string s, string t) {
		int out = accumulate(s.begin(), s.end(), 0);
		out -= accumulate(t.begin(), t.end(), 0);
		out = abs(out);
		return '\0' + out;
	}
};

/**
 * Test cases
 */
int main(void) {
	Solution sol;
	string s, t;

	// test case 1
	s = "abcd";
	t = "abcde";
	std::cout << "findTheDifference(" << s << "," << t << ") = ";
	std::cout << sol.findTheDifference(s, t) << std::endl;

	// test case 2
	s = "";
	t = "y";
	std::cout << "findTheDifference(" << s << "," << t << ") = ";
	std::cout << sol.findTheDifference(s, t) << std::endl;

	return 0;
}